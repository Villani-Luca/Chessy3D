import chess.polyglot
import numpy as np

from src.retrieval.src.pgsql import PgGamesRepository, Connection
from src.retrieval.src.position_embeddings import NaivePositionEmbedder

pgconn = Connection(r"host=localhost user=postgres password=password dbname=chessy")
games_repo = PgGamesRepository(pgconn)
position_embedder = NaivePositionEmbedder()

fen = r"rnbqkb1r/pppp1ppp/4pn2/8/2P5/2N2N2/PP1PPPPP/R1BQKB1R b KQkq - 1 3" # 9 posizione 5
board = chess.Board(fen)
embedding = position_embedder.embedding(board)

# print(board)
# print(Bit(embedding).to_text())
# print(position_embedder.unembedding(embedding))
# print()


# embedding = np.array([int(x) for x in '000000000000000000000000000000000000000100000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000100000000000100000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000100000100000001000110000000000000000100000000000000000000000000000100000000000000000000000000000000000000000000000000000100000100000000000000000000000000000000000000000000000000000010000110000000000000010000000100000100000000000000000100000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000100010000000000000000000000000000000000000000000000000000000001000000000000'])
# board = position_embedder.unembedding(embedding)
# id = chess.polyglot.zobrist_hash(board)
# print(board.fen(), id if id <= 9223372036854775807 else id - 18446744073709551616)

embedding = np.array([int(x) for x in
board = position_embedder.unembedding(embedding)
id = chess.polyglot.zobrist_hash(board)
print(board.fen(), id if id <= 9223372036854775807 else id - 18446744073709551616, -9062197578030825066)
print(board)

board = chess.Board('R2QK2R/1PPP1PP1/1BN2N1P/P3P3/1pb1p1B1/p1ppbn2/r4ppp/2nq1rk1 w - - 0 1')
id = chess.polyglot.zobrist_hash(board)
print(board.fen(), id if id <= 9223372036854775807 else id - 18446744073709551616, -9062197578030825066)
print(board)

print()
print(chess.Board())



for x in games_repo.get_best_games_from_naiveposition(embedding):
    print(x[0],x[1],x[2],x[3],x[5])