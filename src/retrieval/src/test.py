import chess
import chess.polyglot
from pgvector import Bit
import numpy as np

from src.retrieval.src.model.pgsql import PgGamesRepository, Connection
from src.retrieval.src.position_embeddings import NaivePositionEmbedder

pgconn = Connection(r"host=localhost user=postgres password=password dbname=chessy")
games_repo = PgGamesRepository(pgconn)
position_embedder = NaivePositionEmbedder()

fen = r"rnbqkb1r/pppp1ppp/4pn2/8/2P5/2N2N2/PP1PPPPP/R1BQKB1R b KQkq - 1 3" # 9 posizione 5
board = chess.Board(fen)
embedding = position_embedder.embedding(board)

# print(board)
# print(Bit(embedding).to_text())
# print(position_embedder.unembedding(embedding))
# print()


# embedding = np.array([int(x) for x in
# board = position_embedder.unembedding(embedding)
# id = chess.polyglot.zobrist_hash(board)
# print(board.fen(), id if id <= 9223372036854775807 else id - 18446744073709551616)

embedding = np.array([int(x) for x in
board = position_embedder.unembedding(embedding)
id = chess.polyglot.zobrist_hash(board)
print(board.fen(), id if id <= 9223372036854775807 else id - 18446744073709551616, -9062197578030825066)
print(board)

embedding = np.array([int(x) for x in
board = position_embedder.unembedding(embedding)
id = chess.polyglot.zobrist_hash(board)
print(board.fen(), id if id <= 9223372036854775807 else id - 18446744073709551616, -4934241836837828357)
print(board)

embedding = np.array([int(x) for x in
board = position_embedder.unembedding(embedding)
id = chess.polyglot.zobrist_hash(board)
print(board.fen(), id, 9129678919776085433)
print(board)

board = chess.Board()
board.push_san("e4")
board.turn = chess.WHITE

id = chess.polyglot.zobrist_hash(board)
print(board.fen(), id if id <= 9223372036854775807 else id - 18446744073709551616, 8857100499996296351)
print(board)


# for x in games_repo.get_best_games_from_naiveposition(embedding):
#     print(x[0],x[1],x[2],x[3],x[5])